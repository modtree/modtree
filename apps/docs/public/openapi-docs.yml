openapi: 3.0.0
info:
  version: 1.0.0
  title: My API
  description: This is the API
servers:
  - url: v1
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
        facebookId:
          type: string
        googleId:
          type: string
        githubId:
          type: string
        displayName:
          type: string
        username:
          type: string
        email:
          type: string
        matriculationYear:
          type: number
        graduationYear:
          type: number
        graduationSemester:
          type: number
        modulesDone:
          type: array
          items:
            type: string
            example: 7e2e6a37-7924-4b86-a763-098894213b2f
        modulesDoing:
          type: array
          items:
            type: string
            example: 7e2e6a37-7924-4b86-a763-098894213b2f
        savedDegrees:
          type: array
          items:
            type: string
            example: 7e2e6a37-7924-4b86-a763-098894213b2f
        savedGraphs:
          type: array
          items:
            type: string
            example: 7e2e6a37-7924-4b86-a763-098894213b2f
        mainDegree:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
        mainGraph:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required:
        - id
        - facebookId
        - googleId
        - githubId
        - displayName
        - username
        - email
        - matriculationYear
        - graduationYear
        - graduationSemester
        - modulesDone
        - modulesDoing
        - savedDegrees
        - savedGraphs
        - mainDegree
        - mainGraph
  parameters:
    userId:
      in: path
      name: userId
      schema:
        type: string
        example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required: true
    degreeId:
      in: path
      name: degreeId
      schema:
        type: string
        example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required: true
    graphId:
      in: path
      name: graphId
      schema:
        type: string
        example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required: true
paths:
  '/user/{userId}':
    get:
      description: Get user data by its id
      summary: Get a single user
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: Object with user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
