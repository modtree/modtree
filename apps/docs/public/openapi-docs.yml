openapi: 3.0.0
info:
  version: 1.0.0
  title: modtree API
  description: modtree uses tRPC with zod to make our APIs typesafe.
tags:
  - name: User
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
        facebookId:
          type: string
        googleId:
          type: string
        githubId:
          type: string
        displayName:
          type: string
        username:
          type: string
        email:
          type: string
          example: user@gmail.com
        matriculationYear:
          type: number
        graduationYear:
          type: number
        graduationSemester:
          type: number
        modulesDone:
          type: array
          items:
            type: string
            example: CS1010S
        modulesDoing:
          type: array
          items:
            type: string
            example: CS1010S
        savedDegrees:
          type: array
          items:
            type: string
            example: 7e2e6a37-7924-4b86-a763-098894213b2f
        savedGraphs:
          type: array
          items:
            type: string
            example: 7e2e6a37-7924-4b86-a763-098894213b2f
        mainDegree:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
        mainGraph:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required:
        - id
        - facebookId
        - googleId
        - githubId
        - displayName
        - username
        - email
        - matriculationYear
        - graduationYear
        - graduationSemester
        - modulesDone
        - modulesDoing
        - savedDegrees
        - savedGraphs
        - mainDegree
        - mainGraph
    Module:
      type: object
      properties:
        id:
          type: string
          example: 7e2e6a37-7924-4b86-a763-098894213b2f
        moduleCode:
          type: string
          example: CS1010S
        title:
          type: string
        prerequisite:
          type: string
        corequisite:
          type: string
        preclusion:
          type: string
        fulfillRequirements:
          type: array
          items:
            type: string
            example: CS1010S
        prereqTree:
          anyOf:
            - type: string
            - type: object
              properties:
                and:
                  type: array
                  items:
                    type: object
                    properties: {}
                or:
                  type: array
                  items:
                    type: object
                    properties: {}
      required:
        - id
        - moduleCode
        - title
        - prerequisite
        - corequisite
        - preclusion
        - fulfillRequirements
        - prereqTree
  parameters:
    userId:
      in: path
      name: userId
      schema:
        type: string
        example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required: true
    degreeId:
      in: path
      name: degreeId
      schema:
        type: string
        example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required: true
    graphId:
      in: path
      name: graphId
      schema:
        type: string
        example: 7e2e6a37-7924-4b86-a763-098894213b2f
      required: true
paths:
  '/user/{userId}':
    get:
      tags:
        - User
      description: Get user data by its id
      summary: Get a single user
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: Flattened user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user:
    post:
      tags:
        - User
      description: Creates a user after social authentication
      summary: Create a user
      parameters:
        - in: path
          name: email
          schema:
            type: string
            example: user@gmail.com
          required: true
        - in: path
          name: provider
          schema:
            type: string
          required: false
        - in: path
          name: providerId
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Flattened user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
