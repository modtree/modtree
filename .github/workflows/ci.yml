name: ci

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  pre_job:
    # skip duplicate checks
    # https://github.com/marketplace/actions/skip-duplicate-actions
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      build_command: ${{ steps.json.outputs.build_command }}
      test_projects: ${{ steps.json.outputs.test_projects }}
      test_command: ${{ steps.json.outputs.test_command }}
      test_args: ${{ steps.json.outputs.test_args }}
      build_args: ${{ steps.json.outputs.build_args }}
      install_command: ${{ steps.json.outputs.install_command }}
    steps:
      - uses: actions/checkout@v3
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: true
          concurrent_skipping: same_content_newer
          paths_ignore: '["**/README.md", "**/docs/**"]'

      - id: json
        run: ./.github/scripts/read_json.sh
        env:
          EVENT: github.event_name
          REF: github.event.ref

      - name: Debug outputs
        run: echo "${{ toJSON(steps.json.outputs) }}"

  ci: # don't change this name, else will also need to change branch rules
    needs: [pre_job]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        project: ${{ fromJSON(needs.pre_job.outputs.test_projects) }}
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1.6.0
        continue-on-error: true
      - run: ${{ needs.pre_job.outputs.install_command }}
        continue-on-error: true

      - name: Start PostgreSQL
        run: ./.github/scripts/postgres.sh

      - name: üì¶ Run tests for ${{ matrix.project }}
        run: |
          ${{ needs.pre_job.outputs.test_command }} \
          ${{ matrix.project }} ${{ needs.pre_job.outputs.test_args }}
        env:
          TEST_POSTGRES_USERNAME: runner
          TEST_POSTGRES_PASSWORD: runner

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  build: # don't change this name, else will also need to change branch rules
    needs: [pre_job]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1.6.0
        continue-on-error: true
      - run: ${{ needs.pre_job.outputs.install_command }}
        continue-on-error: true

      - name: üì¶ Build entire workspace
        run: |
          ${{ needs.pre_job.outputs.build_command }} \
          ${{ needs.pre_job.outputs.build_args }}

      - name: fail
        run: exit 1

  results:
    needs: [ci, build, pre_job]
    runs-on: ubuntu-20.04
    steps:
      - name: Log inputs
        run: echo '${{ toJSON(needs) }}'

      - name: Get commit SHA
        id: sha
        run: echo "::set-output name=sha::${GITHUB_SHA::7}"

      - name: Get status emojis
        id: results
        run: |
          emojize() {
            [ "$2" = "success" ] && emoji="‚úÖ" || emoji="‚ùå"
            echo "::set-output name=${1}::${emoji}"
          }
          emojize tests ${{ needs.ci.result }}
          emojize build ${{ needs.build.result }}

      - uses: appleboy/telegram-action@master
        if: |
          needs.pre_job.outputs.should_skip != 'true' &&
          github.event_name == 'pull_request'
        with:
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_GROUP }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            `${{ steps.results.outputs.sha }}` #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}
            ${{ steps.results.outputs.build }} yarn build
            ${{ steps.results.outputs.tests }} yarn test

      - uses: appleboy/telegram-action@master
        if: |
          needs.pre_job.outputs.should_skip != 'true' &&
          github.event_name == 'push' && endsWith(github.event.ref, '/main')
        with:
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_GROUP }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            `${{ steps.results.outputs.sha }}` (push to main, cacheless ci)
            ${{ steps.results.outputs.build }} yarn build
            ${{ steps.results.outputs.tests }} yarn test
