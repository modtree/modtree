name: ci

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
      - k
      - w

jobs:
  pre_job:
    # skip duplicate checks
    # https://github.com/marketplace/actions/skip-duplicate-actions
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: same_content_newer
          paths_ignore: '["**/README.md", "**/docs/**"]'

  database_lint:
    if: always()
    runs-on: ubuntu-20.04
    outputs:
      status: ${{ job.status }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: 🍺 Check out repository code
        uses: actions/checkout@v3

      - name: 🧶 Install yarn
        run: yarn install --frozen-lockfile

      - name: 📦 Build & lint database functions
        run: yarn ci

  database_tests:
    if: always()
    runs-on: ubuntu-20.04
    outputs:
      status: ${{ job.status }}
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: 🔥 Initialize PostgreSQL
        run: |
          sudo systemctl start postgresql.service
          echo "CREATE USER runner PASSWORD 'runner';" > /tmp/create_user.sql
          echo "ALTER ROLE runner WITH CREATEDB;" >> /tmp/create_user.sql
          echo "ALTER ROLE runner WITH SUPERUSER;" >> /tmp/create_user.sql
          sudo su postgres -c "psql --file=/tmp/create_user.sql"
          createdb base

      - name: 🍺 Check out repository code
        uses: actions/checkout@v3

      - name: 🧶 Install yarn
        run: yarn install --frozen-lockfile
      
      - name: 📦 Run tests
        working-directory: ./packages/database
        run: |
          TEST_DATABASE_TYPE=POSTGRES \
          TEST_POSTGRES_USERNAME=runner \
          TEST_POSTGRES_PASSWORD=runner \
          TEST_POSTGRES_HOST=localhost \
          TEST_POSTGRES_ACTIVE_DATABASE=base \
          TEST_POSTGRES_RESTORE_SOURCE=postgres-modules-only.sql \
          TEST_POSTGRES_SYNC="true" \
          yarn test:ci

  telegram:
    needs: [pre_job, database_lint, database_tests]
    if: ${{ always() && needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Logs
        run: |
          echo ${{ needs.database_lint.outputs.status }}; \
          echo ${{ needs.database_tests.outputs.status }}; \
          echo ${GITHUB_SHA::7};

      - name: Environment prep
        run: |
          echo "RUN_URL=https://github.com/modtree/modtree/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV; \
          echo "SHORT_SHA=`echo ${GITHUB_SHA::7}`" >> $GITHUB_ENV; \
          [[ "${{ needs.database_lint.outputs.status }}" == "success" ]] \
          && echo "LINT_STATUS=✅" >> $GITHUB_ENV \
          || echo "LINT_STATUS=❌" >> $GITHUB_ENV; \
          [[ "${{ needs.database_tests.outputs.status }}" == "success" ]] \
          && echo "TESTS_STATUS=✅" >> $GITHUB_ENV \
          || echo "TESTS_STATUS=❌" >> $GITHUB_ENV;

      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          disable_web_page_preview: true
          to: ${{ secrets.TELEGRAM_GROUP }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: |
            `${{ env.SHORT_SHA }}` ${{ github.event.head_commit.message }}
            ${{ env.LINT_STATUS }} lint
            ${{ env.TESTS_STATUS }} tests
            [view logs](${{ env.RUN_URL }})
