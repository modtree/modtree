name: ci (no nx cache)

on:
  push:
    branches:
      - main

env:
  PREFIX: TEST_POSTGRES_USERNAME=runner TEST_POSTGRES_PASSWORD=runner
  POSTGRES_INIT: sudo systemctl start postgresql.service; echo "CREATE USER runner PASSWORD 'runner';" > /tmp/setup.sql; echo "ALTER ROLE runner WITH CREATEDB;" >> /tmp/setup.sql; echo "ALTER ROLE runner WITH SUPERUSER;" >> /tmp/setup.sql; sudo su postgres -c "psql --file=/tmp/setup.sql"; createdb mt_test

jobs:
  pre_job:
    # skip duplicate checks
    # https://github.com/marketplace/actions/skip-duplicate-actions
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: true
          concurrent_skipping: same_content_newer
          paths_ignore: '["**/README.md", "**/docs/**"]'

  ci: # don't change this name, else will also need to change branch rules
    if: always()
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        project:
          - repo-api
          - repo-base
          - repo-degree
          - repo-graph
          - repo-module
          - repo-user
          - utils
          - docs
          - server
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn --frozen-lockfile

      - name: Start PostgreSQL
        run: ${{ env.POSTGRES_INIT }}

      - name: ðŸ“¦ Load database environment
        run: ${{ env.PREFIX }} yarn nx test test-env --skip-nx-cache

      - name: ðŸ“¦ Run tests for ${{ matrix.project }}
        id: yarn_test
        run: ${{ env.PREFIX }} yarn nx test ${{ matrix.project }} --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  build: # don't change this name, else will also need to change branch rules
    if: always()
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn --frozen-lockfile

      - name: ðŸ“¦ Build entire workspace
        run: yarn build
